<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.javaclassS.dao.StudyDAO">
	<select id="getUserMidSearch" resultType="com.spring.javaclassS.vo.UserVO">
		select * from user where mid = #{mid};
	</select>
	<select id="getUserMidList" resultType="com.spring.javaclassS.vo.UserVO">
		select * from user where mid like concat('%', #{mid}, '%') order by mid;
	</select>
	<select id="getlistCrimeDate" resultType="com.spring.javaclassS.vo.CrimeVO">
		select * from crime where year = #{year} order by police;
	</select>
	<select id="getPoliceCrimeDate" resultType="com.spring.javaclassS.vo.CrimeVO">
		select * from crime where year = #{year} and police like concat(#{police}, '%') order by police;
	</select>
	<select id="getYearPoliceCheck" resultType="com.spring.javaclassS.vo.CrimeVO">
		select * from crime where year = #{year} and police like concat(#{police}, '%') order by police desc;
	</select>
	<select id="getAllCntVo" resultType="com.spring.javaclassS.vo.CrimeVO">
		select sum(murder+robbery+theft+violence) as allCntCri, sum(murder) as allCntMur, sum(murder) as allCntMur,
		sum(robbery) as allCntRob, sum(theft) as allCntThe, sum(violence) as allCntVio from crime where year = #{year};
	</select>
	<select id="getKakaoAddressSearch" resultType="com.spring.javaclassS.vo.KakaoAddressVO">
		select * from kakaoAddress where address=#{address};
	</select>
	<select id="getKakaoAddressList" resultType="com.spring.javaclassS.vo.KakaoAddressVO">
		select * from kakaoAddress order by address;
	</select>
	<select id="getGameIdx" resultType="com.spring.javaclassS.vo.GameVO">
		select * from itGame where gameIdx=#{gameIdx};
	</select>
	<select id="getGameList" resultType="com.spring.javaclassS.vo.GameVO">
		select * from itGame;
	</select>
	<select id="getQrCodeSearch" resultType="com.spring.javaclassS.vo.QrCodeVO">
		select * from qrCode where qrCodeName = #{qrCode};
	</select>
	<select id="getRecentlyVisitCount" resultType="com.spring.javaclassS.vo.ChartVO">
		<if test="i == 1">
			select substring(visitDate, 1, 10) as visitDate, visitCount from visit order by visitDate desc limit 7;
		</if>
		<if test="i == 2">
			select mid as visitDate, visitCnt as visitCount from member2 order by visitCnt desc limit 7;
		</if>
	</select>
	<select id="getTranscationList" resultType="com.spring.javaclassS.vo.TransactionVO">
		select * from user order by idx desc;
	</select>
	<select id="getTranscationList2" resultType="com.spring.javaclassS.vo.TransactionVO">
		select * from user2 order by mid desc;
	</select>
	
	<update id="setGameUpdate">
		update itGame set gameSubTitle=#{vo.gameSubTitle},gameInfo=#{vo.gameInfo},gameImg=#{vo.gameImg},steamscore=#{vo.steamscore},steamPage=#{vo.steamPage},<if test="vo.metascore != null">metascore=#{vo.metascore},</if>developer=#{vo.developer} where gameIdx=#{gameIdx};
	</update>
	
	
	<insert id="setSaveCrimeData">
		insert into crime values (default, #{vo.year}, #{vo.police}, #{vo.murder}, #{vo.robbery}, #{vo.theft}, #{vo.violence});
	</insert>
	<insert id="setGame">
		insert IGNORE into itGame (gameIdx,gameTitle,jangre,platform,showDate) values (default, #{vo.item1}, #{vo.item2}, #{vo.item3}, #{vo.item4});
	</insert>
	<insert id="setKakaoAddressInput">
		insert into kakaoAddress values (#{vo.address}, #{vo.latitude}, #{vo.longitude});
	</insert>
	<insert id="setQrCodeCreate">
	  insert into qrCode values (default,#{vo.mid},#{vo.name},#{vo.email},#{vo.movieName},#{vo.movieDate},#{vo.movieTime},#{vo.movieAdult},#{vo.movieChild},#{vo.publishDate},#{vo.qrCodeName});
	</insert>
	<insert id="setTransactionUserInput">
	  insert into user values(default,#{vo.mid},#{vo.name},#{vo.age},#{vo.address});
	</insert>
	<insert id="setTransactionUser1Input">
	  insert into user values(default,#{vo.mid},#{vo.name},#{vo.age},#{vo.address});
	</insert>
	<insert id="setTransactionUser2Input">
	  insert into user2 values(#{vo.mid},#{vo.job});
	</insert>
	<insert id="setTransactionUserTotalInput">
		insert into user values (default,#{vo.mid},#{vo.name},#{vo.age},#{vo.address});
	  	insert into user2 values (#{vo.mid},#{vo.job});
	</insert>
	
	
	
	<delete id="setdeleteCrimeDate">
		delete from crime where year = #{year};
	</delete>
	<delete id="setKakaoAddressDelete">
		delete from kakaoAddress where address=#{address};
	</delete>
	<delete id="setCsvTableDelete">
	  delete from ${csvTable};
	</delete>
	
</mapper>